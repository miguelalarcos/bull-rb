require 'opal'
require 'opal-browser'
require 'reactive-ruby'
require 'uglifier'

desc "Build our app to build.js in development mode"
task :development do
  Opal.append_path "."
  Opal.append_path ".."
  builder = Opal::Builder.new
  #builder = Opal::Builder.new(:stubs => ['opal', 'reactive-ruby'])
  build_js = builder.build("main").to_s
  source_map = builder.source_map
  build_js << '//# sourceMappingURL=main.js.map'
  File.write('main.js.map', source_map)
  File.write('build.js', build_js)
  #File.binwrite "build.js", Opal::Builder.build("main").to_s
end

desc "build reactive-ruby"
task :build_reactive_ruby do
  Opal.append_path "."
  File.binwrite "build_reactive_ruby.js", Opal::Builder.build("rr").to_s
  File.binwrite "build_reactive_ruby_uglify.js", Uglifier.new.compile(File.read("build_reactive_ruby.js"))
end

desc "clean"
task :clean do
  File.delete 'build.css' if File.exist? 'build.css'
  File.delete 'build.less.css' if File.exist? 'build.less.css'
  File.delete 'build.styl.css' if File.exist? 'build.styl.css'
end

desc "less compile"
task :less => [:clean] do
  files = Dir.glob(File.join("**", "*.less"))
  files.each do |f|
    `lessc #{f} >> build.less.css`
  end
end

desc "stylus compile"
task :stylus => [:clean] do
  files = Dir.glob(File.join("**", "*.styl"))
  files.each do |f|
    `stylus < #{f} >> build.styl.css`
  end
end

desc "concatenate css to build.css"
task :css => [:less, :stylus] do
  files = Dir.glob(File.join("**", "*.css")).join(' ')
  `cat #{files} > build.css` if files != ''
end